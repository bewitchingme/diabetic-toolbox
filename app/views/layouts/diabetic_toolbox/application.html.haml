!!! 5
%html
  %head
    %title= t('navigation.brand')
    = stylesheet_link_tag    "diabetic_toolbox/application", params[:controller], media: "all"
    = javascript_include_tag "diabetic_toolbox/application"
    = csrf_meta_tags
  %body
    %nav.navbar.navbar-default.navbar-fixed-top{role: 'navigation'}
      .container-fluid
        .row
          .content-nav.smooth
            .navbar-header
              %button.navbar-toggle{'data-target' => '.navbar-collapse', 'data-toggle' => 'collapse', type: 'button'}
                %span.sr-only= t('navigation.sr_only')
                %span.icon-bar
                %span.icon-bar
                %span.icon-bar
              = brand_location
            .collapse.navbar-collapse
              %ul.nav.navbar-nav
                %li
                  %a{href: about_path, rel: "relativeanchor"}= t('navigation.about')
              %ul.nav.navbar-nav.navbar-right
                - if member_signed_in?
                  %li.dropdown
                    %a.dropdown-toggle{'data-toggle' => 'dropdown', :role => 'button', 'aria-expanded' => 'false'}
                      = show_member_gravatar
                      %span.username
                        = current_member.username
                        %span.caret
                    %ul#member_menu.dropdown-menu{ role: 'menu' }
                      %li= link_to content_tag(:span, '', class: 'fa fa-user menu-icon') + t('navigation.members.me'), edit_member_path(current_member)
                      %li= link_to content_tag(:span, '', class: 'fa fa-sliders menu-icon') + t('navigation.members.settings'), settings_path
                      %li= link_to content_tag(:span, '', class: 'fa fa-sign-out menu-icon') + t('navigation.authentication.common.sign_out') , sign_out_path, method: :delete
                - else
                  %li= link_to( t('navigation.register'), new_member_path ) unless @ensure_cohesion.present?
                  %li= link_to t('navigation.authentication.common.sign_in'), sign_in_path unless @ensure_cohesion.present?
    #Application
      = yield
